{"version":3,"sources":["ttlock.coffee"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,CAAA,YAAA;AAAA,MAAA,IAAA,EAAA,MAAA,EAAA,UAAA;AAAA,EAAA,UAAA,GAAa,cAAb;;AAEA,EAAA,IAAA,GAAO,cAAC,MAAD,EAAS,MAAT,EAAA;WACL,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAA;aAAqB,OAAO,CAAC,IAAR,CAAa,OAAb,EAAsB,MAAtB,EAA8B,UAA9B,EAA0C,MAA1C,EAAkD,MAAlD;AAAjC,KAAA;AADK,GAAP;;AAGA,EAAA,MAAA,GAAS;AACP,IAAA,gBAAA,EAAkB,4BAAA;aAAG,IAAA,CAAK,kBAAL,EAAyB,EAAzB;AADd,KAAA;AAEP,IAAA,aAAA,EAAe,yBAAA;aAAG,IAAA,CAAK,eAAL,EAAsB,EAAtB;AAFX,KAAA;AAGP,IAAA,aAAA,EAAe,uBAAC,OAAD,EAAU,MAAV,EAAA;aAAqB,OAAO,CAAC,IAAR,CAAa,OAAb,EAAsB,MAAtB,EAA8B,UAA9B,EAA0C,eAA1C,EAA2D,EAA3D;AAH7B,KAAA;AAIP,IAAA,YAAA,EAAc,wBAAA;aAAG,IAAA,CAAK,cAAL,EAAqB,EAArB;AAJV,KAAA;AAKP,IAAA,YAAA,EAAc,wBAAA;aAAG,IAAA,CAAK,cAAL,EAAqB,EAArB;AALV,KAAA;AAMP,IAAA,gBAAA,EAAkB,4BAAA;aAAG,IAAA,CAAK,kBAAL,EAAyB,EAAzB;AANd,KAAA;AAOP,IAAA,QAAA,EAAU,kBAAC,OAAD,EAAA;aAAa,IAAA,CAAK,UAAL,EAAiB,CAAC,OAAD,CAAjB;AAPhB,KAAA;AAQP,IAAA,WAAA,EAAa,qBAAC,aAAD,EAAgB,QAAhB,EAA0B,OAA1B,EAAA;aAAsC,IAAA,CAAK,aAAL,EAAoB,CAAC,aAAD,EAAgB,QAAhB,EAA0B,OAA1B,CAApB;AAR5C,KAAA;AASP,IAAA,WAAA,EAAa,qBAAC,QAAD,EAAW,OAAX,EAAA;aAAuB,IAAA,CAAK,aAAL,EAAoB,CAAC,QAAD,EAAW,OAAX,CAApB;AAAvB;AATN,GAAT;AAaA,EAAA,MAAM,CAAC,aAAP,GAAuB;AACrB,IAAA,MAAA,EAAQ,CADa;AAErB,IAAA,IAAA,EAAM;AAFe,GAAvB;AAKA,EAAA,MAAM,CAAC,OAAP,GAAiB,MAAjB;CAvBA,MAAA,KAAA","file":"ttlock.js","sourceRoot":"../src/browser","sourcesContent":["ttlockName = 'TTLockPlugin'\n\nexec = (method, params) ->\n  new Promise (resolve, reject) -> cordova.exec(resolve, reject, ttlockName, method, params)\n\nttlock = {\n  prepareBTService: -> exec 'prepareBTService', []\n  stopBTService: -> exec 'stopBTService', []\n  startScanLock: (resolve, reject) -> cordova.exec(resolve, reject, ttlockName, 'startScanLock', [])\n  stopScanLock: -> exec 'stopScanLock', []\n  isBLEEnabled: -> exec 'isBLEEnabled', []\n  requestBleEnable: -> exec 'requestBleEnable', []\n  initLock: (address) -> exec 'initLock', [address]\n  controlLock: (controlAction, lockData, lockMac) -> exec 'controlLock', [controlAction, lockData, lockMac]\n  getLockTime: (lockData, lockMac) -> exec 'getLockTime', [lockData, lockMac]\n\n}\n\nttlock.ControlAction = {\n  Unlock: 3\n  Lock: 6\n}\n\nmodule.exports = ttlock\n"]}